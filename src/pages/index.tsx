import { useUser, SignInButton, SignOutButton } from "@clerk/nextjs";
import Head from "next/head";
import Image from "next/image";
import { type RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-4">
      <Image
        src={user.profileImageUrl}
        width="48"
        height="48"
        alt="profile image"
        className="rounded-full"
      />
      <input
        placeholder="Type some emojis!"
        className="grow bg-transparent p-2 outline-none"
      />
    </div>
  );
};

/**
 * RouterOutputs is a helper that allows us to access the types of our tRPC router
 * Here we're using it to get the type of a SINGLE post from the array returned by api.post.getAll */
type PostWithAuthor = RouterOutputs["post"]["getAll"][number];

const PostView = ({ post, author }: PostWithAuthor) => {
  return (
    <div className="flex items-center gap-4 border-b border-slate-400 p-8">
      <Image
        className="rounded-full"
        src={author?.profileImageUrl ?? ""}
        alt={`@${author.username}'s profile image`}
        width="48"
        height="48"
      />

      <div key={post.id} className="flex flex-col">
        <div className="flex gap-2 font-bold text-slate-400">
          <span>{`@${author.username}`}</span>{" "}
          <span className="font-bold">Â·</span>{" "}
          <span className="font-thin">{`${dayjs(
            post.createdAt
          ).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

export default function Home() {
  const user = useUser();

  const posts = api.post.getAll.useQuery();

  if (posts.isLoading) return <div>Loading...</div>;
  if (!posts.data) return <div>Something went wrong...</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          {/* <header>
            <UserButton />
          </header> */}

          <div className="flex justify-between gap-4 border-b border-slate-400 p-4">
            <CreatePostWizard />
            {user.isSignedIn && (
              <div className="flex min-w-max justify-center">
                <SignOutButton />
              </div>
            )}
          </div>
          <div className="flex flex-col">
            {posts.data?.map((postWithAuthor) => (
              <PostView key={postWithAuthor.post.id} {...postWithAuthor} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
